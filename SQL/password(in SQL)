import telebot
import sqlite3
import settings3

bot = telebot.TeleBot(settings3.API_KEY)
name = None

@bot.message_handler(commands=['start'])
def start(message):
    conn = sqlite3.connect('mymy.sql') #создаем базу данных
    cur = conn.cursor() #через него мы сможем выполнять различные команды для БД

    cur.execute('CREATE TABLE IF NOT EXISTS users (id int auto_increment primary key, name varchar(255), pass varchar(255))') #CREATE TABLE IF NOT EXIST users при старте создает таблицу только если ее нет
    conn.commit() #чтобы выполнить создание таблицы. функция коммит синхронизирует все изменения, чтобы появилась таблица с базой данных 
    cur.close() #буду закрывать курсор
    conn.close() #закрывать соединение 

    bot.send_message(message.chat.id, 'Привет, сейчас тебя зарегистрируем! Введите ваше имя')
    bot.register_next_step_handler(message, user_name)

#получаем юзернейм от пользователя
def user_name(message):
    global name
    name = message.text.strip() #strip удаляет пробелы ДО и после текста
    bot.send_message(message.chat.id, 'Введите пароль')
    bot.register_next_step_handler(message, user_pass)
#получаем пароль от пользователя
def user_pass(message):
    password = message.text.strip()
    
    conn = sqlite3.connect('mymy.sql')
    cur = conn.cursor()

    cur.execute("INSERT INTO users (name, pass) VALUES ('%s', '%s')" % (name, password))
    conn.commit()
    cur.close()
    conn.close()


    markup = telebot.types.InlineKeyboardMarkup() #тут можно было импортировать тайпсы"from telebot import types", но просто обратился к тайпсам вручную по пути
    markup.add(telebot.types.InlineKeyboardButton('Список пользователей', callback_data="users"))
    bot.send_message(message.chat.id, 'Пользователь зарегистрирован', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    conn = sqlite3.connect('mymy.sql')
    cur = conn.cursor()

    cur.execute('SELECT * FROM users')
    users = cur.fetchall()

    info = ''
    for el in users:
        info += f'Имя: {el[1]}, пароль: {el[2]}\n'

    cur.close()
    conn.close()

    bot.send_message(call.message.chat.id, info)

bot.polling(none_stop=True)